<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns="http://www.w3.org/2012/10/xslt-test-catalog"
          name="attribute-set">
   <description>Tests attribute-set</description>
   <environment name="attribute-set-01">
      <source role="." file="attribute-set-01.xml"/>
   </environment>
   <environment name="attribute-set-02">
      <source role=".">
         <content><![CDATA[ 

<doc>
  <foo>a</foo>
</doc>
]]></content>
      </source>
   </environment>
   <environment name="attribute-set-03">
      <source role="." file="attribute-set-03.xml"/>
   </environment>
   <environment name="attribute-set-04">
      <source role=".">
         <content><![CDATA[<page>source</page>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-05">
      <source role="." file="attribute-set-05.xml"/>
   </environment>
   <environment name="attribute-set-06">
      <source role=".">
         <content><![CDATA[<docs>
  <a href="http://www.ns0.com">Attr0</a>
  <b href="">Attr1</b>
</docs>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-07">
      <source role=".">
         <content><![CDATA[<ticket>
<input>
<zoneone checked="1">Zoneone
</zoneone>
</input> 
</ticket> ]]></content>
      </source>
   </environment>
   <environment name="attribute-set-08">
      <source role=".">
         <content><![CDATA[<doc> 
</doc> ]]></content>
      </source>
   </environment>
   <environment name="attribute-set-09">
      <source role="." file="attribute-set-09.xml"/>
   </environment>
   <environment name="attribute-set-10">
      <source role=".">
         <content><![CDATA[<doc>
 <test>a</test>
</doc>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-11">
      <source role="." file="attribute-set-11.xml"/>
   </environment>
   <environment name="attribute-set-12">
      <source role=".">
         <content><![CDATA[ 
<doc>
</doc>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-13">
      <source role=".">
         <content><![CDATA[<docs>
  <b>bdd:attr</b>
</docs>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-14">
      <source role=".">
         <content><![CDATA[<docs>
<doc/>
<a>X</a>
<a>Y</a>
<a>Z</a>
</docs>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-15">
      <source role=".">
         <content><![CDATA[<doc>
  <foo>a</foo>
</doc>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-16">
      <source role=".">
         <content><![CDATA[ <doc>
  <test>a</test>
</doc>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-17">
      <source role=".">
         <content><![CDATA[ 
<doc>
  <foo>a</foo>
</doc>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-18">
      <source role=".">
         <content><![CDATA[<doc>
</doc>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-19">
      <source role=".">
         <content><![CDATA[ 

<doc>
  <foo>a</foo>
</doc>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-20">
      <source role=".">
         <content><![CDATA[
<doc>
  <foo>a</foo>
</doc>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-21">
      <source role=".">
         <content><![CDATA[<doc/>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-22">
      <source role=".">
         <content><![CDATA[<doc/>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-23">
      <source role=".">
         <content><![CDATA[<doc></doc>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-24">
      <source role=".">
         <content><![CDATA[<doc/>]]></content>
      </source>
   </environment>
   <environment name="attribute-set-26">
      <source role=".">
         <content><![CDATA[<doc/>]]></content>
      </source>
   </environment>

   <test-case name="attribute-set-0001">
      <description>Test that the attribute name is cast to a string if supplied as a QName</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0001.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:p="http://ns.p.com/" p:local="content"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0002">
      <description>Test that the attribute namespace is cast to a string if supplied as a anyURI</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0002.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:p="http://ns.p.com/" xmlns:p_1="http://ns.p.com/2" p_1:local="content"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0003">
      <description>Test that the attribute name is cast to a string if supplied as a dynamic QName</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0003.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:p="http://ns.p.com/" p:local="content"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0004">
      <description>Test that the attribute namespace is cast to a string if supplied as a dynamic anyURI</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0004.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:p="http://ns.p.com/" xmlns:p_1="http://ns.p.com/2" p_1:local="content"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0005">
      <description>Test that the attribute namespace is cast to a string if supplied as a dynamic boolean (Highly artifial test, but legal XSLT, even though the results cannot be converted to canonical XML)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0005.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<result value="true"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0006">
      <description>Use on-empty attribute on xsl:attribute (XSLT 3.0) - in element constructor</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0006.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test68 b="blue"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0007">
      <description>Use on-empty attribute on xsl:attribute (XSLT 3.0) - freestanding</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0007.xsl"/>
         <initial-template name="main"/>
      </test>
      <result>
         <assert-xml><![CDATA[<atrs69/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0101">
      <description>Set attribute of a LRE from single attribute set.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-01"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0101.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0102">
      <description>Use EQNames for attribute set names (XSLT 3.0)</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-01"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0102.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black" texture="matt"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0103">
      <description>Use on-empty attribute on xsl:attribute (XSLT 3.0) - in attribute set</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-01"/>
      <dependencies>
         <spec value="XSLT30+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0103.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test67/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0201">
      <description>Set attributes of a LRE from multiple attribute sets.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0201.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black" text-decoration="underline"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0202">
      <description>Set attributes of an element created with xsl:element from multiple attribute sets.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0202.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test color="black" text-decoration="underline"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0203">
      <description>Set attributes of an element created with xsl:copy from multiple attribute sets.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0203.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><foo color="black" text-decoration="underline"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0204">
      <description>Set attributes of a LRE using attribute sets that inherit.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0204.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 font-size="14pt" text-decoration="underline" color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0205">
      <description>Set attributes of a LRE using attribute sets that inherit, plus add overlapping attribute with xsl:attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0205.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 font-size="14pt" text-decoration="none" color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0206">
      <description>Set attributes of a LRE using attribute sets that inherit, but have overlapping attributes.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0206.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0207">
      <description>Set attributes of an element created with xsl:element, using attribute sets that inherit, plus add overlapping attribute with xsl:attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0207.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test font-size="14pt" text-decoration="none" color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0208">
      <description>Set attributes of an element created with xsl:copy, using attribute sets that inherit, plus add overlapping attribute with xsl:attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0208.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><foo font-size="14pt" text-decoration="none" color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0209">
      <description>Set attributes of an LRE, using attribute sets whose names overlap, plus add overlapping attribute with xsl:attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0209.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test text-decoration="none" color="black" font-size="14pt"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0210">
      <description>Set attributes of an LRE, using one attribute set with multiple attributes, and one overriding LRE attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0210.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black" font-size="10pt" font-weight="bold"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0211">
      <description>Set attributes of an LRE, using one attribute set with multiple attributes, and one overriding LRE attribute, and one overriding xsl:attribute attribute.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-02"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0211.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black" font-size="24pt" font-weight="bold"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0301">
      <description>test use of non-ASCII characters in URL and non-URL attributes using HTML output method</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-03"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0301.xsl"/>
      </test>
      <result>
         <assert-serialization method="html" file="atrs13.out"/>
      </result>
   </test-case>

   <test-case name="attribute-set-0401">
      <description>This test is designed to exercise the different paths in the Saxon implementation of xsl:attribute</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-04"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0401.xsl"/>
      </test>
      <result>
         <assert-serialization method="html" file="atrs14.out"/>
      </result>
   </test-case>

   <test-case name="attribute-set-0501">
      <description>This test is designed to show that fixed attributes are copied and implied attributes are not</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-05"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0501.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<!--abcdef--><page attfixed="default">source</page>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0601">
      <description>The namespace attribute is interpreted as an attribute value template.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-06"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0601.xsl"/>
      </test>
      <result>
         <assert-xml file="attribute-set-0601.out"/>
      </result>
   </test-case>

   <test-case name="attribute-set-0701">
      <description>Verify that 'checked' attribute of HTML element input is correctly set.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-07"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0701.xsl"/>
      </test>
      <result>
         <assert-serialization method="html" file="atrs17.out"/>
      </result>
   </test-case>

   <test-case name="attribute-set-0801">
      <description>Verify adding an attribute to an element replaces any existing attribute of that element with the same expanded name.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0801.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<root xmlns:bdd="http://www.bdd.com" xmlns:ped="http://www.ped.com">
<Out attr1="Hello" ped:attr1="Test2-OK" bdd:attr1="Test1-OK" attr2="Goodbye"/></root>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0802">
      <description>Attempt to set an empty or null attribute in various ways.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-08"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0802.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><e NoContent="" String0t="" String0v="" String0f=""/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-0803">
      <description>Verify adding an attribute to an element after children have been added to it is an error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0803.xsl"/>
      </test>
      <result>
         <error code="XTDE0410"/>
      </result>
   </test-case>

   <test-case name="attribute-set-0804">
      <description>Verify adding an attribute to an element after a comment has been added to it is an error.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0804.xsl"/>
      </test>
      <result>
         <error code="XTDE0410"/>
      </result>
   </test-case>

   <test-case name="attribute-set-0805">
      <description>Verify adding an attribute to an element after a PI has been added to it is an error. The attributes can be ignored. The spec doesn't explicitly say this is disallowed, as it does for child elements, but it makes sense to have the same treatment.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-08"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0805.xsl"/>
      </test>
      <result>
         <error code="XTDE0410"/>
      </result>
   </test-case>

   <test-case name="attribute-set-0901">
      <description>Test for selecting attributes with xml namespace prefix.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-09"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-0901.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out>
  a
  b

  c
  d
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1001">
      <description>Purpose: Use xsl:copy with a single attribute set.  ResultTree002 in NIST suite</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-10"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1001.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test format="bold"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1101">
      <description>Verify that attributes that contain text nodes with a newline, the output must contain a character reference.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-11"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1101.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<Out attr1="x&#xA;&#x9;  y"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1201">
      <description>XSLT processors may make use of the prefix of the QNAME specified in the name attribute ... however they are not required to do so and, if the prefix is xmlns, they must not do so ... this will not result in a namespace declaration being output.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-12"/>
      <dependencies>
         <spec value="XSLT10+"/>
         <feature value="namespace_axis"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1201.xsl"/>
      </test>
      <result>
         <assert-xml file="attribute-set-1201.out"/>
      </result>
   </test-case>

   <test-case name="attribute-set-1301">
      <description>The attribute must be in the designated namespace, even if the prefix has to be reset or ignored.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-13"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1301.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<ans xmlns:bdd="http://bdd.test.com" bdd="http://bdd.test.com" attr-ns="http://xyz.com"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1302">
      <description>The attribute must be in the designated namespace, even if the prefix has to be reset or ignored.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-13"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1302.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out xmlns:bdd="http://bdd.test.com"><ans local="attr" ns="http://xyz.com" good-prefix="true"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1401">
      <description>Use xsl:element with for-each inside xsl:attribute</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-14"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1401.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out test1="XYZ"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1501">
      <description>Purpose: Use xsl:copy with multiple attribute sets that inherit, but have conflicts.  ResultTree004 in NIST suite</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1501.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><doc color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1502">
      <description>Purpose: Use xsl:copy with multiple attribute sets with conflicting set name, then reset one attribute with xsl:attribute.  ResultTree004 in NIST suite test corrected by MHK: use-attribute-sets is ignored when the context node is the root</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1502.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><doc text-decoration="none" color="black" font-size="14pt"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1503">
      <description>Purpose: Use xsl:copy with multiple attribute sets in a list that have conflicts. Author: David Marston</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1503.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><doc color="green"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1504">
      <description>Purpose: Use xsl:copy with multiple attribute sets in "merge" scenario.  simplified from ResultTree004 in NIST suite test corrected by MHK. Original uses xsl:copy when the context node is a document node; the spec says use-attribute-sets is used only when copying elements.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1504.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><doc text-decoration="underline" color="black" font-size="14pt"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1505">
      <description>Purpose: Use xsl:element with multiple attribute sets with conflicting names (merge scenario), plus local override with xsl:attribute.  ResultTree008 in NIST suite</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1505.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><element1 text-decoration="none" color="black" font-size="14pt"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1506">
      <description>Purpose: Use xsl:element with multiple attribute sets with conflicting set names. Author: David Marston</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1506.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><element1 text-decoration="underline" color="black" font-size="14pt"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1507">
      <description> ResultTree006 in NIST suite Purpose: Use xsl:element with multiple attribute sets that inherit, but have overlapping attributes.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1507.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><element1 color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1508">
      <description>Purpose: Set some attributes from an imported definition. defines colorset</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1508.xsl"/>
         <stylesheet file="attribute-set-1508a.xsl" role="secondary"/>
         <stylesheet file="attribute-set-1508t.xsl" role="secondary"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test color="green" text-decoration="underline"/>
  <foocopy color="green" text-decoration="underline" font-size="14pt">a</foocopy>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1509">
      <description>Purpose: Set some attributes from an imported definition.  defines colorset</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1509.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test color="green" text-decoration="underline"/>
  <foocopy color="green" text-decoration="underline" font-size="14pt">a</foocopy>
</out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1510">
      <description>Test inheritance of attribute sets. A literal result element is referring an attribute set that is defined by two separate &lt;xsl:attribute-set.../&gt; elements with the same name. Both these elements have a use-attribute-sets attribute, which means that we have a single attribute set that inherits from two other attribute sets.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-15"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1510.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out rabbithole="deep" follow="yellowbrickroad" Alice="intoxicated" wife="thumbelina" location="Wonderland"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1601">
      <description>Purpose: Set attributes of an element created with xsl:element from single attribute set.  ResultTree007 in NIST suite</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-16"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1601.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 format="bold"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1701">
      <description>Purpose: Use xsl:element with multiple attribute sets that inherit.  ResultTree005 in NIST suite</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-17"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1701.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test font-size="14pt" text-decoration="underline" color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1801">
      <description>Test use of leading underscore in names.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-18"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1801.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test _a_color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-1901">
      <description>Test inheritance of attribute sets. A literal result element is referring an attribute set that is defined by two separate &lt;xsl:attribute-set.../&gt; elements with the same name. Both these elements have a use-attribute-sets attribute, which means that we have a single attribute set that inherits from two other attribute sets. Both parents attribute sets have attributes that are overridden by the child.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-19"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-1901.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out alice="intoxicated" follow="theleader" rabbithole="deep" location="Wonderland"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2001">
      <description>Test inheritance of attribute sets. A xsl:element instruction is referring an attribute set that is defined by two separate xsl:attribute-set elements with the same name.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-20"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2001.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out follow="theleader" rabbithole="shallow" alice="intoxicated"
     location="Wonderland"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2101">
      <description>Purpose: Only top-level variables and params are visible within the declaration of an attribute set.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-21"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2101.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out test="correct"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2201">
      <description>Basic test of import precedence with attribute sets</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-22"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2201.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><foo baz="two"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2202">
      <description>Basic test of import precedence based on Richard Titmuss's test with attribute sets. 
      Here the imported attribute sets have additional non- conflicting attributes as well.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-22"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2202.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><foo baz="two" foo="ten" poo="twenty"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2301">
      <description>Test attribute set with a qualified name.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-23"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2301.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2302">
      <description>Test attribute set with a qualified name, different prefix.</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-23"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2302.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2401">
      <description>xsl:attribute with select="x" (XSLT 2.0).</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-24"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2401.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2402">
      <description>xsl:attribute with select="x" and separators (XSLT 2.0).</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-24"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2402.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="black|blue|3"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2403">
      <description>xsl:attribute with content and separators (XSLT 2.0).</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-24"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2403.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<out><test1 color="blackbluegreen"/></out>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2404">
      <description>test an empty attribute set &lt;xsl:attribute name="n1" select="s1"/&gt;</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-24"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2404.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<a/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2405">
      <description>Test separator on xsl:attribute, with and without select attribute, including default</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-24"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2405.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<x a="1 2 3" b="1-2-3" c="123" d="1 2 3" e="1-2-3" f="123" g="123" h="1 2 3"/>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2406">
      <description>check use of attribute sets with a computed element name Saxon bug 1244273 It seems Saxon has a problem with the following line... whereas this line will work as expected...</description>
      <created by="Michael Kay" on="2012-11-07"/>
      <environment ref="attribute-set-24"/>
      <dependencies>
         <spec value="XSLT10+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2406.xsl"/>
      </test>
      <result>
         <assert-xml><![CDATA[<Data foo="bar"><doc/></Data>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="attribute-set-2601">
      <description>Test case that uses xsl:attribute instruction to create an attribute without having the REQUIRED name.</description>
      <created by="Michael Kay" on="2012-10-30"/>
      <environment ref="attribute-set-26"/>
      <dependencies>
         <spec value="XSLT20+"/>
      </dependencies>
      <test>
         <stylesheet file="attribute-set-2601.xsl"/>
      </test>
      <result>
         <error code="XTSE0010"/>
      </result>
   </test-case>
</test-set>
